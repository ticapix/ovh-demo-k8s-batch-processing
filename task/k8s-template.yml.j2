apiVersion: batch/v1
kind: Job
metadata:
  name: generate-thumb-{{ k8s.timestamp }}
  labels:
    nodepool: compute # kubectl get job -l nodepool=compute
spec:
  template:
    metadata:
      labels:
        nodepool: compute # kubectl get pod -l nodepool=compute
    spec:
      containers:
      - name: generate-thumb
        image: {{ k8s.docker_image }}
        args: [ "{{ k8s.bucket_in }}", "{{ k8s.filepath }}", "{{ k8s.bucket_out }}"]
        env:
        {%- for var in env_vars %}
          {%- if var.startswith('OS_') %}
        - name: {{ var }}
          value: "{{ env(var) }}"
          {%- endif %}
        {%- endfor %}
        resources:
          requests:
            cpu: 1 # 1 core 
          limits:
            cpu: 8 # 8 cores
      restartPolicy: Never
      nodeSelector: # schedule on nodes with those labels
        nodepool: compute
  # backoffLimit: 1
